# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")
config("download_interfaces_kits_napi_config") {
  visibility = [ ":*" ]
  include_dirs = [ "include" ]

  cflags_cc = [ "-fexceptions" ]
}
ohos_shared_library("downloadsingle") {
  include_dirs = [
    "//foundation/arkui/ace_engine/frameworks/base/utils",
    "//foundation/arkui/napi",
    "//foundation/arkui/napi/interfaces/kits",
    "//foundation/arkui/napi/interfaces/inner_api",
    "//third_party/node/src",
    "//third_party/curl/include",
    "//foundation/aafwk/standard/services/common/include",
    "//utils/system/safwk/native/include",
    "//base/miscservices/request/download/interfaces/kits/napi/download_single/include",
    "//base/miscservices/request/download/interfaces/innerkits/include",
    "//base/miscservices/request/download/utils/include",
    "//foundation/aafwk/standard/frameworks/kits/appkit/native/app/include/",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include",
    "//foundation/aafwk/standard/interfaces/innerkits/base/include/ohos/aafwk/base",
    "//foundation/aafwk/standard/services/abilitymgr/include",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include/ohos/aafwk/content",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include",
    "//foundation/aafwk/standard/interfaces/innerkits/uri/include",
  ]
  public_configs = [ ":download_interfaces_kits_napi_config" ]

  sources = [
    "src/async_call.cpp",
    "src/download_base_notify.cpp",
    "src/download_config.cpp",
    "src/download_event.cpp",
    "src/download_fail_notify.cpp",
    "src/download_info.cpp",
    "src/download_manager.cpp",
    "src/download_notify_stub.cpp",
    "src/download_pause.cpp",
    "src/download_progress_notify.cpp",
    "src/download_query.cpp",
    "src/download_query_mimetype.cpp",
    "src/download_remove.cpp",
    "src/download_resume.cpp",
    "src/download_service_proxy.cpp",
    "src/download_task.cpp",
    "src/download_task_napi.cpp",
    "src/legacy/download_manager.cpp",
    "src/legacy/download_task.cpp",
    "src/napi_utils.cpp",
  ]
  deps = [
    "//foundation/aafwk/standard/frameworks/kits/ability/native:abilitykit_native",
    "//foundation/aafwk/standard/frameworks/kits/ability/native:dummy_classes",
    "//foundation/aafwk/standard/interfaces/innerkits/uri:zuri",
    "//foundation/arkui/napi:ace_napi",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/curl:curl",
    "//utils/native/base:utils",
  ]
  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:napi_base_context",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "native_appdatamgr:native_appdatafwk",
    "native_appdatamgr:native_dataability",
    "native_appdatamgr:native_preferences",
    "native_appdatamgr:native_rdb",
  ]
  relative_install_dir = "module"
  subsystem_name = "miscservices"
  part_name = "request"
}
